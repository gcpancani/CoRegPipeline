%This script imports coregistration EEGs and synchronizes them with the
%eyetrack. Furthermore it loads the IA file (generated through Dataviewer)
%and codes the wordnum into the file.
clear all;
eeglab;
subject_list = {'02';'04';'05';'07';'08';'09';'10';'12';'13';'14';'15';'16';'17';'19';'20';'21';'22';'23';'24';'25';'26';'27';'28';'29';'30';'31';'32';'33';'34';'35';'36';'37'}; %list all of the subjects you want to process, in the order you want them to be processed.
num_subj = length(subject_list); %counts how many subjects
parent_folder = 'g:\\JX\\'; %the folder that contains the coordinates file as well as the individual subjects subfolders
erp_folder = 'g:\\JX\\ERPs\\';
all_epochs_folder = 'g:\\JX\\all_epochs\\';
reports_folder = 'X:\J\JX\Data';
%% Import data from text file.
% Script for importing data from the following text file:
%
%    G:\JX\MedianGZDbyCond.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/05/19 17:10:58

%% Initialize variables.
filename = 'G:\JX\MedianGZDbyCond.txt';
delimiter = '\t';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Subject = dataArray{:, 1};
GZDid = dataArray{:, 2};
GZDUnr = dataArray{:, 3};
GZDeg = dataArray{:, 4};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

for s=1:num_subj %creates variable s, which will increase up to the number of subjects
    %Create the folder if it doesn't exist already.
    subject = subject_list{s};
    %Files that need to be loaded
    subjectfolder = [parent_folder subject '\'];
    subjectIA = [reports_folder '\JX_' subject '_IA_expanded.txt'];
    subjectMSG = [reports_folder '\JX_' subject '_MSG.txt'];
    subjectnumeric=str2double(subject);
    CurrentMedianDeg=GZDeg(subjectnumeric);
    CurrentMedianId=GZDid(subjectnumeric);
    CurrentMedianUnr=GZDUnr(subjectnumeric);
    
    EEG = pop_loadset('filename',['JX_' subject '_03_eyes.set'],'filepath',subjectfolder);
    EEG = eeg_checkset( EEG );
    
    IAexpanded = importfileIA(subjectIA, 2, inf);
    datasize= length(IAexpanded);
    IAtrial = 1;
    for q= 1:datasize
        stridentifier= IAexpanded{q,2};
        if length(stridentifier)>3
            while length(stridentifier)<8
                stridentifier = strcat('0',stridentifier);
                IAexpanded{q,2} = stridentifier;
            end
            if q > 1
                u= q-1;
                prevstridentifier =  IAexpanded{u,2};
                while length(prevstridentifier) <8
                    prevstridentifier = strcat('0',prevstridentifier);
                end
                
            else
                prevstridentifier = stridentifier;
            end
        else
            IAexpanded{q,2} = '00000000';
        end
    end
    
    
    %In this next part we find all beginning of sentence triggers and set a
    %trial number for all events. We will also attach the sentence frame trigger to
    %all events.
    secondlastevent = (length(EEG.event))-1;
    trial = 0;
    for l=1:secondlastevent
        eventname = EEG.event(l).type;
        if strcmp (eventname,'224') == 1
            trial = trial+1;
            g = l;
            EEG.event(l).trial = trial;
            nexttrigger = l+1;
            subeventnumb =1;
            sentencetrigger ='nothing';
            while strcmp (EEG.event(nexttrigger).type,'224') == 0 && nexttrigger < (secondlastevent-1)
                subeventnumb = subeventnumb+1;
                eventnamenext = EEG.event(nexttrigger).type;
                
                if strcmp(eventnamenext,'R_fixation')==0 &&  strcmp(eventnamenext,'L_fixation')==0 && strcmp(eventnamenext,'R_saccade')==0 && strcmp(eventnamenext,'L_saccade')==0 && strcmp(eventnamenext,'R_blink')==0 && strcmp(eventnamenext,'L_blink')==0 && strcmp(eventnamenext,'113')==0 && strcmp(eventnamenext,'111')==0 && strcmp(eventnamenext,'112')==0 && strcmp(eventnamenext,'224')==0
                    sentencetrigger = eventnamenext;
                end
                EEG.event(nexttrigger).trial = trial;
                nexttrigger = nexttrigger+1;
            end
            a = g+subeventnumb;
            %                 for p = g:a
            %                     EEG.event(p).itemID = sentencetrigger;
            %                 end
            
        end
    end
    
    for i=1:secondlastevent
        eventname = EEG.event(1,i).type;
        if strcmp(eventname,'R_fixation')==1 ||  strcmp(eventname,'L_fixation')==1
            
            fixpos= EEG.event(i).fix_avgpos_x;
            EEGtrialID = EEG.event(i).trial;
            wordnumexists=0;
            for x = 1:datasize
                if wordnumexists> 0
                    break
                end
                                
                if IAexpanded{x,16} == EEGtrialID
                    left =IAexpanded{x,13};
                    right = IAexpanded{x,14};
                    if fixpos > left && fixpos < right
                               
                        EEG.event(i).wordnum = IAexpanded{x,3};
                        wordnumexists = size((EEG.event(i).wordnum),2);
                        stridentifier= IAexpanded{x,2};
                        itemID = stridentifier(1:3);
                        EEG.event(i).itemid = itemID;
                        EEG.event(i).identifier = stridentifier;
                        EEG.event(i).IA_REGRESSION_PATH= IAexpanded{x,5};
                        EEG.event(i).IA_FFD = IAexpanded{x,6};
                        EEG.event(i).IA_F2DUR = IAexpanded{x,7};
                        EEG.event(i).IA_SKIP = IAexpanded{x,8};
                        EEG.event(i).IA_TTime = IAexpanded{x,9};
                        EEG.event(i).IA_GZD =IAexpanded{x,10};
                        EEG.event(i).IA_FPNfix = IAexpanded{x,11};
                        EEG.event(i).IA_FFProg =  IAexpanded{x,12};
                    end
               
                end
            end
        end
    end
    
    
    
    
    %Now signal whether a word is a target %This section is different in JX
    %than JJ because JX only has one target word per sentence
    for i=1:secondlastevent
        
        wordnum = EEG.event(i).wordnum;
        stridentifier = EEG.event(i).identifier;
        if length(stridentifier)>3
            while length(stridentifier)<8
                stridentifier = strcat('0',stridentifier);
            end
            if length(stridentifier)>3
                
                target1 =  str2double(stridentifier(6));
                
                if wordnum == target1
                    if EEG.event(i).IA_FFProg==1
                        if EEG.event(i).IA_FPNfix==1
                            if EEG.event(i).IA_GZD > 100 && EEG.event(i).IA_GZD< 600
                                PrevCondition= str2double(EEG.event(i).identifier(5));
                                if PrevCondition ==1
                                    if EEG.event(i).IA_GZD <CurrentMedianId
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'IDslow';
                                    else
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'IDfast';
                                        
                                    end
                                elseif PrevCondition==2
                                    if EEG.event(i).IA_GZD <CurrentMedianUnr
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'Unrslow';
                                    else
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'Unrfast';
                                        
                                    end
                                elseif PrevCondition==3
                                    if EEG.event(i).IA_GZD <CurrentMedianDeg
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'Degslow';
                                    else
                                        EEG.event(i).target = 1;
                                        EEG.event(i).type = 'Degfast';
                                        
                                    end
                                    
                                end
                            end
                            
                            
                        end
                        
                    end
                else
                    EEG.event(i).target = 0;
                end
                %5/19 - I stopped here%%
                %now rename saccades to targets as 501 if they were the first target
                for j=1:secondlastevent
                    eventname = EEG.event(1,j).type;
                    if strcmp(eventname,'R_fixation')==1 ||  strcmp(eventname,'L_fixation')==1
                        istarget= EEG.event(j).target;
                        if istarget==0
                            wordnum = EEG.event(j).wordnum;
                            stridentifier = EEG.event(j).identifier;
                            while length(stridentifier)<8
                                stridentifier = strcat('0',stridentifier);
                            end
                            
                            target1 =  str2double(stridentifier(6));
                            
                            strwordnum= num2str(wordnum);
                            str1=num2str(target1);
                            
                            otherfix = strwordnum;
                            
                            EEG.event(j).type = str2double(otherfix);
                        end
                    end
                end
            end
        end
    end
    
    EEG = eeg_checkset( EEG );
    EEG  = pop_editeventlist( EEG , 'AlphanumericCleaning', 'on', 'BoundaryNumeric', { -99}, 'BoundaryString', { 'boundary' }, 'ExportEL', [subjectfolder 'JX_' subject '_elist.txt'], 'List', 'G:\JX\JX_EventListCreationSplit.txt', 'SendEL2', 'EEG&Text', 'UpdateEEG', 'off', 'Warning', 'off' );
    % save events as Numeric labels
    EEG.setname=['JX_' subject '_04_cleaned_elist'];
    %now low-pass filter
    EEG  = pop_basicfilter( EEG,  1:36 , 'Boundary', 'boundary', 'Cutoff',  30, 'Design', 'butter', 'Filter', 'lowpass', 'Order',  4 ); % GUI: 17-May-2015 15:43:23
    EEG.setname=['JX_' subject '_04_filt_cleaned'];
    %Epoching
    EEG = eeg_checkset( EEG );
    EEG  = pop_binlister( EEG , 'BDF', 'G:\JX\JX_bins_split.txt', 'ExportEL', [subjectfolder 'JX_' subject '_cleaned_elist.txt'], 'IndexEL',  1, 'SendEL2', 'EEG&Text', 'UpdateEEG', 'on', 'Voutput', 'EEG' ); % GUI: 17-May-2015 15:44:09
    EEG = eeg_checkset( EEG );
    
    EEG = pop_editset(EEG, 'setname',['JX_' subject '_05_cleaned_bins']);
    EEG = pop_saveset( EEG, 'filename',['JX_' subject '_05_cleaned_bins.set'],'filepath', subjectfolder);
    EEG = pop_epochbin( EEG , [-100.0  700.0],  'pre'); % GUI: 10-Jun-2015 13:42:25
    [ALLEEG, EEG, CURRENTSET] = eeg_store( ALLEEG, EEG, 1 );
    EEG = pop_saveset( EEG, 'filename',['JX_' subject '_06_cleaned_binned.set'],'filepath', subjectfolder);
    EEG  = pop_artmwppth( EEG , 'Channel',  1:32, 'Flag',  1, 'Threshold',  120, 'Twindow', [ -99.6 400], 'Windowsize',  200, 'Windowstep',  120 ); % GUI: 22-Jun-2015 11:37:05
    [ALLEEG, EEG, CURRENTSET] = eeg_store( ALLEEG, EEG, 2 );
    EEG = pop_saveset( EEG, 'filename',['JX_' subject '_07_cleaned_artflagged.set'],'filepath', subjectfolder);
    ERP = pop_averager( ALLEEG , 'Criterion', 'good', 'DSindex',2, 'ExcludeBoundary', 'on', 'SEM', 'on' );
    ERP = pop_savemyerp(ERP, 'erpname', ['JX_' subject '_cleaned_erp'], 'filename', ['JX_' subject '_cleaned_erp.erp'], 'filepath', erp_folder , 'Warning', 'off');% GUI: 10-Jun-2015 13:43:39
    
    closeme = length(ALLEEG);
    ALLEEG = pop_delset( EEG, 1: closeme);
    closeme2 = length(ALLERP);
    ALLERP = pop_delset(ERP, 1: closeme2);
    clear ET;
    clear data;
    clear IAdata;
    clear IAexpanded;
    
end
